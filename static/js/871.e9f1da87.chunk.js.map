{"version":3,"file":"static/js/871.e9f1da87.chunk.js","mappings":"uOA2CA,UAtCgB,WACZ,OAAwCA,EAAAA,EAAAA,UAAS,CAAEC,QAAS,KAA5D,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BH,EAAAA,EAAAA,WAAS,GAArC,eAAOI,EAAP,KAAeC,EAAf,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAgBR,OAfAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAiB,mCAAG,2FACrBJ,GAAU,GADW,mBAGCK,EAAAA,EAAAA,IAAqBJ,GAHtB,OAGZK,EAHY,OAIlBR,EAAgBQ,GAJE,gDAMlBC,QAAQC,IAAI,6BAAZ,MANkB,yBASlBR,GAAU,GATQ,4EAAH,qDAYvBI,GACH,GAAE,CAACH,KAEA,gCACKF,IAAU,SAAC,IAAD,IACVF,EAAaY,QAAU,GACpB,wBACKZ,EAAaY,QAAQC,KAAI,SAAAC,GAAM,OAC5B,2BACI,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFNF,EAAOV,GADY,OAQpC,0DAKf,C","sources":["pages/Reviews/Reviews.jsx"],"sourcesContent":["import { Loader } from \"components/Loader/Loader\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMovieReviewsApi } from \"services/moviesApi\";\n\nconst Reviews = () => {\n    const [movieReviews, setMovieReviews] = useState({ reviews: [] });\n    const [loader, setLoader] = useState(false);\n    const { id } = useParams();\n    useEffect(() => {\n        const fetchMovieReviews = async () => {\n             setLoader(true);\n            try {\n                const data = await fetchMovieReviewsApi(id);\n                setMovieReviews(data);\n            } catch (error) {\n                console.log('Error fetching movie cast:', error);\n            }\n            finally {\n                setLoader(false)\n            }\n        };\n        fetchMovieReviews();\n    }, [id]);\n    return (\n        <>\n            {loader && <Loader/>}\n            {movieReviews.results > 0 ? (\n                <ul>\n                    {movieReviews.results.map(review => (\n                        <li key={review.id}>\n                            <h2>Author:{review.author}</h2>\n                            <p>{review.content}</p>\n                        </li>\n                    ))}\n                </ul>\n            ) : (\n                <p>No reviews for this movie...</p>\n            )}\n        </>\n       \n    )\n}\nexport default Reviews;\n"],"names":["useState","reviews","movieReviews","setMovieReviews","loader","setLoader","id","useParams","useEffect","fetchMovieReviews","fetchMovieReviewsApi","data","console","log","results","map","review","author","content"],"sourceRoot":""}