{"version":3,"file":"static/js/257.70a92378.chunk.js","mappings":"+QAEaA,E,QAAcC,EAAAA,IAAH,+D,mBCmDxB,EA/CqB,WACjB,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACE,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACIC,GAAOC,EAAAA,EAAAA,MAAPD,IACNE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAiB,mCAAG,2FACtBJ,GAAU,GADY,mBAGPK,EAAAA,EAAAA,IAAqBJ,GAHd,OAGpBK,EAHoB,OAI1BR,EAAgBQ,GAJU,gDAM1BC,QAAQC,IAAI,gCAAZ,MAN0B,yBASxBR,GAAU,GATc,4EAAH,qDAY3BI,GACD,GAAE,CAACH,IACJ,IAAMQ,EAAM,0CAAsCZ,EAAaa,aAC7D,OACI,2BACKX,IAAU,SAACY,EAAA,EAAD,KACnB,4BACE,6BACE,SAAC,KAAD,CAAMC,GAAG,IAAT,wBAEF,4BACE,SAAClB,EAAD,CAAamB,IAAKJ,EAAQK,IAAKjB,EAAakB,WAE9C,wBAAKlB,EAAakB,SAClB,yCAAiBC,KAAKC,MAAgC,GAA1BpB,EAAaqB,cAAzC,QACA,sCACA,uBAAIrB,EAAasB,YACjB,mCAAiBtB,EAAauB,QAAUvB,EAAauB,OAAOC,KAAI,SAAAC,GAAK,OAAI,uBAAmBA,EAAMC,MAAjBD,EAAMrB,GAAlB,MAX7DA,IAaF,4BACI,oDACA,2BACI,yBAAI,SAAC,KAAD,CAAMW,GAAG,OAAT,qBACJ,yBAAI,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAEJ,SAAC,KAAD,SAInB,C","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import s from \"@emotion/styled\";\n\nexport const ImageStyled = s.img `\n    width: 200px;\n    heigth: 200px;\n`","import { useEffect, useState } from 'react';\nimport { Link, useParams, Outlet } from 'react-router-dom';\nimport { fetchMovieDetailsApi } from 'services/moviesApi';\nimport { ImageStyled } from './MovieDetails.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n    const [movieDetails, setMovieDetails] = useState([]);\n      const [loader, setLoader] = useState(false);\n  const { id } = useParams();\n    useEffect(() => {\n        const fetchMovieDetails = async () => {\n            setLoader(true);\n      try {\n        const data = await fetchMovieDetailsApi(id);\n        setMovieDetails(data);\n      } catch (error) {\n        console.log('Error fetching movie details:', error);\n            }\n      finally {\n          setLoader(false)\n            }\n    };\n    fetchMovieDetails();\n  }, [id]);\n  const poster = `https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`;\n    return (\n        <div>\n            {loader && <Loader />}\n    <div key={id}>\n      <button>\n        <Link to=\"/\">Go Back</Link>\n      </button>\n      <aside>\n        <ImageStyled src={poster} alt={movieDetails.title} />\n      </aside>\n      <h2>{movieDetails.title}</h2>\n      <p>User scrore: {Math.round(movieDetails.vote_average*10)}%</p>\n      <h3>Overview</h3>\n      <p>{movieDetails.overview}</p>\n      <h4>Genres</h4>{ movieDetails.genres && movieDetails.genres.map(genre => <p key={genre.id}>{genre.name}</p>)}  \n      </div>\n            <div>\n                <h5>Additional information</h5>\n                <ul>\n                    <li><Link to=\"cast\">Cast</Link></li>\n                    <li><Link to=\"reviews\">Reviews</Link></li>\n                </ul>\n                    <Outlet/>\n            </div>\n        </div>\n  );\n};\nexport default MovieDetails;\n"],"names":["ImageStyled","s","useState","movieDetails","setMovieDetails","loader","setLoader","id","useParams","useEffect","fetchMovieDetails","fetchMovieDetailsApi","data","console","log","poster","poster_path","Loader","to","src","alt","title","Math","round","vote_average","overview","genres","map","genre","name"],"sourceRoot":""}