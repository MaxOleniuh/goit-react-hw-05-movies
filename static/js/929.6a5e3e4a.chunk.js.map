{"version":3,"file":"static/js/929.6a5e3e4a.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.jsx","services/moviesApi.js"],"sourcesContent":["import s from \"@emotion/styled\";\n\nexport const ImageStyled = s.img `\n    width: 200px;\n    heigth: 200px;\n`","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return <StyledLink to={to}>{children}</StyledLink>;\n};","import { useEffect, useState } from 'react';\nimport { Link, useParams, Outlet, useLocation } from 'react-router-dom';\nimport { fetchMovieDetailsApi } from 'services/moviesApi';\nimport { ImageStyled } from './MovieDetails.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { BackLink } from 'components/BackLink/BackLink';\nconst MovieDetails = () => {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/goit-react-hw-05-movies';\n  const [movieDetails, setMovieDetails] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const { id } = useParams();\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      setLoader(true);\n      try {\n        const data = await fetchMovieDetailsApi(id);\n        setMovieDetails(data);\n      } catch (error) {\n        console.log('Error fetching movie details:', error);\n      } finally {\n        setLoader(false);\n      }\n    };\n    fetchMovieDetails();\n  }, [id]);\n\n  const poster = `https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`;\n  return (\n    <div>\n      {loader && <Loader />}\n      <div key={id}>\n        <BackLink to={backLinkHref}>Go back</BackLink>\n        <aside>\n          <ImageStyled src={poster} alt={movieDetails.title} />\n        </aside>\n        <h2>{movieDetails.title}</h2>\n        <p>User scrore: {Math.round(movieDetails.vote_average * 10)}%</p>\n        <h3>Overview</h3>\n        <p>{movieDetails.overview}</p>\n        <h4>Genres</h4>\n        {movieDetails.genres &&\n          movieDetails.genres.map(genre => <p key={genre.id}>{genre.name}</p>)}\n      </div>\n      <div>\n        <h5>Additional information</h5>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from: location.state?.from }}>Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: location.state?.from }}>Reviews</Link>\n          </li>\n        </ul>\n        <Outlet />\n      </div>\n    </div>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0899cb23c3aa3793d7d2c78c362ea8dc';\n\nexport const fetchTrendingMoviesApi = async () => {\n  try {\n    const response = await axios.get('/trending/all/day', {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchKeyMoviesApi = async query => {\n  try {\n    const response = await axios.get('/search/movie', {\n      params: {\n        api_key: API_KEY,\n        query: query,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieDetailsApi = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieCastApi = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieReviewsApi = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["ImageStyled","s","StyledLink","styled","Link","BackLink","to","children","location","useLocation","backLinkHref","state","from","useState","movieDetails","setMovieDetails","loader","setLoader","id","useParams","useEffect","fetchMovieDetails","fetchMovieDetailsApi","data","console","log","poster","poster_path","Loader","src","alt","title","Math","round","vote_average","overview","genres","map","genre","name","axios","API_KEY","fetchTrendingMoviesApi","params","api_key","response","results","fetchKeyMoviesApi","query","fetchMovieCastApi","fetchMovieReviewsApi"],"sourceRoot":""}