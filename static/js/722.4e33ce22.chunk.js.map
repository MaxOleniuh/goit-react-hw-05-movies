{"version":3,"file":"static/js/722.4e33ce22.chunk.js","mappings":"wQACaA,E,QAAcC,EAAAA,IAAH,2C,yECmCxB,EA9Ba,WACL,OAAkCC,EAAAA,EAAAA,UAAS,CAAEC,KAAM,KAAnD,eAAOC,EAAP,KAAkBC,EAAlB,KACF,GAA4BH,EAAAA,EAAAA,WAAS,GAArC,eAAOI,EAAP,KAAeC,EAAf,KACIC,GAAOC,EAAAA,EAAAA,MAAPD,GAgBR,OAfEE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAc,mCAAG,2FACnBJ,GAAU,GADS,mBAGJK,EAAAA,EAAAA,IAAkBJ,GAHd,OAGjBK,EAHiB,OAIvBR,EAAaQ,GAJU,gDAMvBC,QAAQC,IAAI,6BAAZ,MANuB,yBASrBR,GAAU,GATW,4EAAH,qDAYxBI,GACC,GAAE,CAACH,KAEJ,0BACSF,IAAU,SAACU,EAAA,EAAD,IACVZ,EAAUD,KAAKc,KAAI,SAAAd,GAAI,OAAI,2BAC3B,SAACH,EAAD,CAAakB,IAA2B,OAAtBf,EAAKgB,aAAL,0CAAgEhB,EAAKgB,cAAiBC,EAASC,IAAKlB,EAAKmB,QAC1H,wBAAKnB,EAAKmB,QACV,uCAAenB,EAAKoB,eAHepB,EAAKK,GAAlB,MAOnC,C,mMClCDgB,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAsB,mCAAG,6GAEXF,EAAAA,EAAAA,IAAU,oBAAqB,CACpDG,OAAQ,CACNC,QAASH,KAJqB,cAE5BI,EAF4B,yBAO3BA,EAAShB,KAAKiB,SAPa,gCASlChB,QAAQC,IAAR,MATkC,yDAAH,qDAatBgB,EAAiB,mCAAG,WAAMC,GAAN,gGAENR,EAAAA,EAAAA,IAAU,gBAAiB,CAChDG,OAAQ,CACNC,QAASH,EACTO,MAAOA,KALkB,cAEvBH,EAFuB,yBAQtBA,EAAShB,KAAKiB,SARQ,gCAU7BhB,QAAQC,IAAR,MAV6B,yDAAH,sDAcjBkB,EAAoB,mCAAG,WAAMzB,GAAN,gGAETgB,EAAAA,EAAAA,IAAA,iBAAoBhB,GAAM,CAC/CmB,OAAQ,CACNC,QAASH,KAJmB,cAE1BI,EAF0B,yBAOzBA,EAAShB,MAPgB,gCAShCC,QAAQC,IAAR,MATgC,yDAAH,sDAapBH,EAAiB,mCAAG,WAAMJ,GAAN,gGAENgB,EAAAA,EAAAA,IAAA,iBAAoBhB,EAApB,YAAkC,CACvDmB,OAAQ,CACNC,QAASH,KAJgB,cAEvBI,EAFuB,yBAOtBA,EAAShB,MAPa,gCAS7BC,QAAQC,IAAR,MAT6B,yDAAH,sDAajBmB,EAAoB,mCAAG,WAAM1B,GAAN,gGAETgB,EAAAA,EAAAA,IAAA,iBAAoBhB,EAApB,YAAkC,CACvDmB,OAAQ,CACNC,QAASH,KAJmB,cAE1BI,EAF0B,yBAOzBA,EAAShB,MAPgB,gCAShCC,QAAQC,IAAR,MATgC,yDAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/moviesApi.js"],"sourcesContent":["import s from \"@emotion/styled\";\nexport const StyledImage = s.img`\n    width: 150px;\n`","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMovieCastApi } from \"services/moviesApi\";\nimport { StyledImage } from \"./Cast.styled\";\nimport noImage from '../../images/no-image.png'\nimport { Loader } from \"components/Loader/Loader\";\nconst Cast = () => {\n        const [movieCast, setMovieCast] = useState({ cast: [] });\n      const [loader, setLoader] = useState(false);\n  const { id } = useParams();\n    useEffect(() => {\n        const fetchMovieCast = async () => {\n            setLoader(true);\n      try {\n        const data = await fetchMovieCastApi(id);\n        setMovieCast(data);\n      } catch (error) {\n        console.log('Error fetching movie cast:', error);\n            }\n      finally {\n          setLoader(false)\n            }\n    };\n    fetchMovieCast();\n    }, [id]);\n  return (\n    <ul>\n            {loader && <Loader/>}\n            {movieCast.cast.map(cast => <li key={cast.id}>\n             <StyledImage src={cast.profile_path !== null ? `https://image.tmdb.org/t/p/w500/${cast.profile_path}` : noImage} alt={cast.name} />\n              <h3>{cast.name}</h3>\n              <p>Character: {cast.character}</p>\n                </li>)}\n        </ul>\n    )\n}\nexport default Cast;","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0899cb23c3aa3793d7d2c78c362ea8dc';\n\nexport const fetchTrendingMoviesApi = async () => {\n  try {\n    const response = await axios.get('/trending/all/day', {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchKeyMoviesApi = async query => {\n  try {\n    const response = await axios.get('/search/movie', {\n      params: {\n        api_key: API_KEY,\n        query: query,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieDetailsApi = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieCastApi = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieReviewsApi = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["StyledImage","s","useState","cast","movieCast","setMovieCast","loader","setLoader","id","useParams","useEffect","fetchMovieCast","fetchMovieCastApi","data","console","log","Loader","map","src","profile_path","noImage","alt","name","character","axios","API_KEY","fetchTrendingMoviesApi","params","api_key","response","results","fetchKeyMoviesApi","query","fetchMovieDetailsApi","fetchMovieReviewsApi"],"sourceRoot":""}